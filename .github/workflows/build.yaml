name: CI
on:
  push:
    branches:
      - main
      - develop
      - feature/*
      - hotfix/*
      - release/*
      - config/*
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.0-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aparkapp
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
        pip install codacy-coverage
    - name: Run migrations
      run: |
        cd aparkapp
        python manage.py makemigrations
        python manage.py migrate
      env:
        STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
        STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        STRIPE_LOCAL_WEBHOOK_SECRET: ${{ secrets.STRIPE_LOCAL_WEBHOOK_SECRET }}
        FIXER_ACCESS_KEY: ${{ secrets.FIXER_ACCESS_KEY }}
        OPEN_EXCHANGE_RATES_APP_ID: ${{ secrets.OPEN_EXCHANGE_RATES_APP_ID }}
    - name: Run tests
      run: cd aparkapp;coverage run --branch --source=. ./manage.py test api --keepdb; coverage xml;
      env:
        STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
        STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
        STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        STRIPE_LOCAL_WEBHOOK_SECRET: ${{ secrets.STRIPE_LOCAL_WEBHOOK_SECRET }}
        FIXER_ACCESS_KEY: ${{ secrets.FIXER_ACCESS_KEY }}
        OPEN_EXCHANGE_RATES_APP_ID: ${{ secrets.OPEN_EXCHANGE_RATES_APP_ID }}
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1.1.0
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: aparkapp/coverage.xml

  codacy-analysis-cli:
    name: Codacy Analysis CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true

  deploy:
    needs: build
    if: ${{github.ref == 'refs/heads/develop'}}
    name: Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY_2}}
          heroku_app_name: "aparkapp-backend-s3"
          heroku_email: "fernandohq23@outlook.com"
